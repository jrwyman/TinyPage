{"version":3,"sources":["util/session_util.js","actions/session_actions.js","reducers/session_reducer.js","util/post_util.js","actions/post_actions.js","reducers/posts_reducer.js","reducers/root_reducer.js","store/store.js","util/route_util.jsx","components/common/home/home.jsx","components/common/nav/TinyPage.png","components/common/nav/navbar.jsx","components/common/posts/post_compose.jsx","components/common/likebox.jsx","components/common/commentbox.jsx","components/common/posts/post.jsx","components/profile/profile.jsx","components/session/login_form.jsx","components/session/signup_form.jsx","components/feed/feed.jsx","components/app.jsx","components/root.jsx","index.jsx"],"names":["setAuthToken","token","axios","defaults","headers","common","Authorization","RECEIVE_USER_SIGN_IN","RECEIVE_SESSION_ERROR","RECEIVE_USER_LOGOUT","RECEIVE_USER_SIGN_UP","receiveError","error","type","login","user","dispatch","userData","post","then","res","data","localStorage","setItem","APIUtil","decoded","jwt_decode","currentUser","catch","err","response","logout","removeItem","initialState","isAuthenticated","session","state","action","undefined","getPosts","a","get","Error","getUserPosts","id","writePost","likePost","patch","commentOnPost","text","RECEIVE_POSTS","RECEIVE_NEW_POST","RECEIVE_USER_POSTS","RECEIVE_POST_ERROR","receiveNewPost","receivePostError","addLikeToPost","addCommentToPost","message","fetchPosts","posts","receivePosts","fetchUserPosts","receiveUserPosts","all","userPosts","new","Object","freeze","RootReducer","combineReducers","configureStore","preloadedState","createStore","rootReducer","applyMiddleware","thunk","logger","mapStateToProps","loggedIn","AuthRoute","withRouter","connect","Component","component","path","exact","render","props","to","ProtectedRoute","rest","Home","className","NavBar","useSelector","useDispatch","logoutUser","e","preventDefault","src","logo","alt","width","onClick","PostCompose","useState","setText","onSubmit","value","onChange","currentTarget","placeholder","LikeBox","likes","handleLike","length","CommentBox","comments","postId","_id","commentText","setCommentText","trigger","handleComment","openedClassName","triggerWhenOpen","triggerOpenedClassName","target","map","comment","username","Post","Profile","newPost","useEffect","handleFetchUserPosts","LoginForm","email","password","fields","setFields","handleChange","field","autoComplete","SignupForm","history","useHistory","password2","update","push","Feed","handleFetchPosts","App","Root","store","document","addEventListener","jwtToken","decodedUser","currentTime","Date","now","exp","window","location","href","root","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.f2af4142.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const setAuthToken = (token) => {\n  if (token) {\n    axios.defaults.headers.common.Authorization = token;\n  } else {\n    delete axios.defaults.headers.common.Authorization;\n  }\n};\n\nexport const signup = (userData) => axios.post('/users/register', userData);\n\nexport const login = (userData) => axios.post('/users/login', userData);\n","// eslint-disable-next-line camelcase\nimport jwt_decode from 'jwt-decode';\nimport * as APIUtil from '../util/session_util';\n\nexport const RECEIVE_USER_SIGN_IN = 'RECEIVE_USER_SIGN_IN';\nexport const RECEIVE_SESSION_ERROR = 'RECEIVE_SESSION_ERROR';\nexport const RECEIVE_USER_LOGOUT = 'RECEIVE_USER_LOGOUT';\nexport const RECEIVE_USER_SIGN_UP = 'RECEIVE_USER_SIGN_UP';\n\nexport const receiveCurrentUser = (currentUser) => ({\n  type: RECEIVE_USER_SIGN_IN,\n  currentUser,\n});\n\nexport const receiveUserSignUp = () => ({\n  type: RECEIVE_USER_SIGN_UP,\n});\n\nexport const receiveError = (error) => ({\n  type: RECEIVE_SESSION_ERROR,\n  error,\n});\n\nexport const logoutUser = () => ({\n  type: RECEIVE_USER_LOGOUT,\n});\n\nexport const signup = (user) => async (dispatch) => {\n  try {\n    await APIUtil.signup(user);\n    return dispatch(receiveUserSignUp());\n  } catch (e) {\n    return dispatch(receiveError(e.response.data));\n  }\n};\n\nexport const login = (user) => (dispatch) => (\n  APIUtil.login(user).then((res) => {\n    const { token } = res.data;\n    // eslint-disable-next-line no-undef\n    localStorage.setItem('jwtToken', token);\n    APIUtil.setAuthToken(token);\n    const decoded = jwt_decode(token);\n    dispatch(receiveCurrentUser(decoded));\n  })\n    .catch((err) => {\n      dispatch(receiveError(err.response.data));\n    })\n);\n\nexport const logout = () => (dispatch) => {\n  // eslint-disable-next-line no-undef\n  localStorage.removeItem('jwtToken');\n  APIUtil.setAuthToken(false);\n  dispatch(logoutUser());\n};\n","import {\n  RECEIVE_USER_SIGN_IN,\n  RECEIVE_USER_LOGOUT,\n  RECEIVE_USER_SIGN_UP,\n  RECEIVE_SESSION_ERROR,\n} from '../actions/session_actions';\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {},\n  error: {},\n};\n\nconst session = (state = initialState, action) => {\n  switch (action.type) {\n    case RECEIVE_USER_SIGN_IN:\n      return {\n        ...state,\n        isAuthenticated: !!action.currentUser,\n        user: action.currentUser,\n      };\n    case RECEIVE_USER_LOGOUT:\n      return {\n        ...state,\n        isAuthenticated: false,\n        user: undefined,\n      };\n    case RECEIVE_USER_SIGN_UP:\n      return {\n        ...state,\n      };\n    case RECEIVE_SESSION_ERROR:\n      return {\n        ...state,\n        error: action.error,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default session;\n","import axios from 'axios';\n\nexport const getPosts = async () => {\n  try {\n    const response = await axios.get('/posts');\n    return response.data;\n  } catch (e) {\n    throw new Error('Error retrieving feed posts', e);\n  }\n};\n\nexport const getUserPosts = async (id) => {\n  try {\n    const response = await axios.get(`/posts/user/${id}`);\n    return response.data;\n  } catch (e) {\n    throw new Error('Error retrieving profile posts', e);\n  }\n};\n\nexport const writePost = async (data) => {\n  const response = await axios.post('/posts/', data);\n  return response.data;\n};\n\nexport const likePost = async (id) => {\n  try {\n    await axios.patch(`/posts/${id}/like`);\n  } catch (e) {\n    throw new Error('Error liking post', e);\n  }\n};\n\nexport const commentOnPost = async (id, text) => {\n  try {\n    const response = await axios.patch(`/posts/${id}/comment`, { text });\n    return response.data;\n  } catch (e) {\n    throw new Error('Error commenting on post', e);\n  }\n};\n","/* eslint-disable no-debugger */\nimport {\n  getPosts, getUserPosts, writePost, likePost, commentOnPost,\n} from '../util/post_util';\n\nexport const RECEIVE_POSTS = 'RECEIVE_POSTS';\nexport const RECEIVE_NEW_POST = 'RECEIVE_NEW_POST';\nexport const RECEIVE_USER_POSTS = 'RECEIVE_USER_POSTS';\nexport const RECEIVE_POST_ERROR = 'RECEIVE_POST_ERROR';\n\nexport const receivePosts = (posts) => ({\n  type: RECEIVE_POSTS,\n  posts,\n});\n\nexport const receiveUserPosts = (posts) => ({\n  type: RECEIVE_USER_POSTS,\n  posts,\n});\n\nexport const receiveNewPost = (post) => ({\n  type: RECEIVE_NEW_POST,\n  post,\n});\n\nexport const receivePostError = (error) => ({\n  type: RECEIVE_POST_ERROR,\n  error,\n});\n\nexport const addLikeToPost = (id) => async (dispatch) => {\n  try {\n    await likePost(id);\n  } catch (e) {\n    dispatch(receivePostError(e.response.data));\n  }\n};\n\nexport const addCommentToPost = (id, data) => async (dispatch) => {\n  try {\n    await commentOnPost(id, data);\n  } catch (e) {\n    dispatch(receivePostError(e.message));\n  }\n};\n\nexport const fetchPosts = () => (dispatch) => (\n  getPosts()\n    .then((posts) => {\n      dispatch(receivePosts(posts));\n    })\n    .catch((err) => dispatch(receivePostError(err.response.data)))\n);\n\nexport const fetchUserPosts = (id) => (dispatch) => (\n  getUserPosts(id)\n    .then((posts) => dispatch(receiveUserPosts(posts)))\n    .catch((err) => dispatch(receivePostError(err.response.data)))\n);\n\nexport const composePost = (data) => async (dispatch) => {\n  try {\n    const post = await writePost(data);\n    dispatch(receiveNewPost(post));\n  } catch (e) {\n    dispatch(receivePostError(e.response.data));\n  }\n};\n","import {\n  RECEIVE_POSTS,\n  RECEIVE_USER_POSTS,\n  RECEIVE_NEW_POST,\n  RECEIVE_POST_ERROR,\n} from '../actions/post_actions';\n\nconst initialState = {\n  all: [],\n  userPosts: [],\n  new: undefined,\n  error: {},\n};\n\nconst posts = (state = initialState, action) => {\n  Object.freeze(state);\n  switch (action.type) {\n    case RECEIVE_POSTS:\n      return {\n        ...state,\n        all: action.posts,\n      };\n    case RECEIVE_USER_POSTS:\n      return {\n        ...state,\n        userPosts: action.posts,\n      };\n    case RECEIVE_NEW_POST:\n      return {\n        ...state,\n        new: action.post,\n      };\n    case RECEIVE_POST_ERROR:\n      return {\n        ...state,\n        error: action.error,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default posts;\n","import { combineReducers } from 'redux';\nimport session from './session_reducer';\nimport posts from './posts_reducer';\n\nconst RootReducer = combineReducers({\n  session, posts,\n});\n\nexport default RootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\nimport rootReducer from '../reducers/root_reducer';\n\nconst configureStore = (preloadedState = {}) => (\n  createStore(\n    rootReducer,\n    preloadedState,\n    applyMiddleware(thunk, logger),\n  )\n);\n\nexport default configureStore;\n","/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect, withRouter } from 'react-router-dom';\n\n// Passed in from parent component or from mapStateToProps\nconst Auth = ({\n  component: Component, path, loggedIn, exact,\n}) => (\n  <Route\n    path={path}\n    exact={exact}\n    render={(props) => (\n      !loggedIn ? (\n        <Component {...props} />\n      ) : (\n      // Redirect to the home page if the user is authenticated\n        <Redirect to=\"/feed\" />\n      )\n    )}\n  />\n);\n\nconst Protected = ({ component: Component, loggedIn, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) => (loggedIn ? (\n      <Component {...props} />\n    ) : (\n    // Redirect to the login page if the user is already authenticated\n      <Redirect to=\"/login\" />\n    ))}\n  />\n);\n\n// Use the isAuthenitcated slice of state to determine whether a user is logged in\n\nconst mapStateToProps = (state) => (\n  { loggedIn: state.session.isAuthenticated }\n);\n\nexport const AuthRoute = withRouter(connect(mapStateToProps)(Auth));\n\nexport const ProtectedRoute = withRouter(connect(mapStateToProps)(Protected));\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './home.css';\n\nfunction Home() {\n  return (\n    <div className=\"home\">\n      <div className=\"home-header\">\n        <h1>Welcome to TinyPage!</h1>\n        <Link className=\"signup-text\" to=\"/signup\"><h2>Create an account today!</h2></Link>\n      </div>\n      <p className=\"point\">Your sensitive data is hashed using BCrypt before it ever reaches our database! With that being said, we do not recommend entering any personal information or real passwords on this site.</p>\n      <p className=\"point\">All basic functions of a social media site are present including accounts, feeds, likes, and comments (profile pictures coming soon).</p>\n      <p className=\"point\">Requests are made from the server side and protected with custom Authorization.</p>\n    </div>\n  );\n}\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/TinyPage.08ef7619.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { logout } from '../../../actions/session_actions';\nimport logo from './TinyPage.png';\nimport './nav.css';\n\nfunction NavBar() {\n  const loggedIn = useSelector((state) => state.session.isAuthenticated);\n\n  const dispatch = useDispatch();\n\n  const logoutUser = (e) => {\n    e.preventDefault();\n    dispatch(logout());\n  };\n\n  const getLinks = () => {\n    if (loggedIn) {\n      return (\n        <div className=\"nav-links\">\n          <button type=\"submit\" onClick={logoutUser}>Logout</button>\n          <Link to=\"/feed\">Feed</Link>\n          <Link to=\"/profile\">Profile</Link>\n        </div>\n      );\n    }\n    return (\n      <div className=\"nav-links\">\n        <Link to=\"/signup\">Signup</Link>\n        <Link to=\"/login\">Login</Link>\n      </div>\n    );\n  };\n\n  const renderLogo = () => (\n    <Link to=\"/\"><img className=\"logo\" src={logo} alt=\"logo\" width=\"100px\" /></Link>\n  );\n\n  return (\n    <div className=\"navbar\">\n      {renderLogo()}\n      {getLinks()}\n    </div>\n  );\n}\n\nexport default NavBar;\n","/* eslint-disable no-debugger */\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { composePost } from '../../../actions/post_actions';\nimport './post_compose.css';\n\nfunction PostCompose() {\n  const error = useSelector((state) => state.posts.error);\n\n  const dispatch = useDispatch();\n\n  const [text, setText] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const post = {\n      text,\n    };\n\n    dispatch(composePost(post));\n    setText('');\n  };\n\n  const handleChange = (e) => {\n    setText(e.currentTarget.value);\n  };\n\n  const renderError = () => {\n    if (error) {\n      return (\n        <div>\n          {error.error}\n        </div>\n      );\n    }\n    return null;\n  };\n\n  return (\n    <div className=\"post-compose-container\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"post-compose-form\">\n          <h3>Create Post</h3>\n          <textarea\n            value={text}\n            onChange={handleChange}\n            placeholder=\"Write your post...\"\n            className=\"post-compose-text\"\n          />\n          <input type=\"submit\" value=\"Post\" className=\"post-compose-submit\" />\n          {renderError()}\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default PostCompose;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './likebox.css';\n\nfunction LikeBox({ likes, handleLike }) {\n  return (\n    <div className=\"likes\">\n      <button\n        className=\"likes-submit\"\n        onClick={handleLike}\n        type=\"submit\"\n      >\n        🤍\n      </button>\n      <div className=\"likes-count\">{likes.length}</div>\n    </div>\n  );\n}\n\nLikeBox.propTypes = {\n  likes: PropTypes.arrayOf(PropTypes.string).isRequired,\n  handleLike: PropTypes.func.isRequired,\n};\n\nexport default LikeBox;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Collapsible from 'react-collapsible';\nimport PropTypes from 'prop-types';\nimport { addCommentToPost } from '../../actions/post_actions';\n\nimport './commentbox.css';\n\nfunction CommentBox({ fetchPosts, post, comments }) {\n  const { _id: postId } = post;\n\n  const [commentText, setCommentText] = useState('');\n\n  const dispatch = useDispatch();\n\n  const trigger = (\n    <div className=\"comments-trigger\">\n      <div className=\"comments-trigger-icon\">💬</div>\n      <div className=\"comments-count\">{comments.length}</div>\n    </div>\n  );\n\n  const handleChange = (e) => {\n    setCommentText(e.target.value);\n  };\n\n  const handleComment = async (e) => {\n    e.preventDefault();\n    await dispatch(addCommentToPost(postId, commentText));\n    fetchPosts();\n  };\n\n  return (\n    <Collapsible\n      className=\"comments-collapsible\"\n      openedClassName=\"comments-open-collapsible\"\n      triggerWhenOpen=\"ⓧ\"\n      trigger={trigger}\n      triggerOpenedClassName=\"comments-open-trigger\"\n    >\n      <form className=\"comment-form\" onSubmit={handleComment}>\n        <input className=\"comment-input\" value={commentText} onChange={handleChange} placeholder=\"Write your comment\" type=\"text\" />\n        <input className=\"comment-submit\" type=\"submit\" value=\"Post\" />\n      </form>\n      {comments.map((comment) => (\n        <div key={comment.text} className=\"comment\">\n          <div className=\"comment-user\">{comment.username}</div>\n          <div className=\"comment-text\">{comment.text}</div>\n        </div>\n      ))}\n    </Collapsible>\n  );\n}\n\nCommentBox.propTypes = {\n  post: PropTypes.shape({\n    user: PropTypes.shape({\n      username: PropTypes.string,\n    }),\n    _id: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n    likes: PropTypes.arrayOf(PropTypes.string).isRequired,\n    comments: PropTypes.arrayOf(PropTypes.shape({\n      user_id: PropTypes.string,\n      username: PropTypes.string,\n      text: PropTypes.string,\n    })),\n  }).isRequired,\n  comments: PropTypes.arrayOf(PropTypes.shape({\n    user_id: PropTypes.string,\n    username: PropTypes.string,\n    text: PropTypes.string,\n  })).isRequired,\n  fetchPosts: PropTypes.func.isRequired,\n};\n\nexport default CommentBox;\n","/* eslint-disable no-debugger */\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { addLikeToPost } from '../../../actions/post_actions';\nimport LikeBox from '../likebox';\nimport CommentBox from '../commentbox';\nimport './post.css';\n\nfunction Post({ post, fetchPosts }) {\n  const {\n    user: { username }, _id: postId, text, likes, comments,\n  } = post;\n\n  const dispatch = useDispatch();\n\n  const handleLike = async () => {\n    await dispatch(addLikeToPost(postId));\n    fetchPosts();\n  };\n\n  return (\n    <div className=\"post\" key={postId}>\n      <h3>{username}</h3>\n      <p className=\"post-text\">{text}</p>\n      <div className=\"post-actions\">\n        <CommentBox fetchPosts={fetchPosts} post={post} comments={comments} />\n        <LikeBox likes={likes} handleLike={handleLike} />\n      </div>\n    </div>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    user: PropTypes.shape({\n      username: PropTypes.string,\n    }),\n    _id: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n    likes: PropTypes.arrayOf(PropTypes.string).isRequired,\n    comments: PropTypes.arrayOf(PropTypes.shape({\n      user_id: PropTypes.string,\n      username: PropTypes.string,\n      text: PropTypes.string,\n    })),\n  }).isRequired,\n  fetchPosts: PropTypes.func.isRequired,\n};\n\nexport default Post;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport PostCompose from '../common/posts/post_compose';\nimport { fetchUserPosts } from '../../actions/post_actions';\nimport Post from '../common/posts/post';\nimport './profile.css';\n\nfunction Profile() {\n  const userPosts = useSelector((state) => state.posts.userPosts);\n  const newPost = useSelector((state) => state.posts.new);\n  const currentUser = useSelector((state) => state.session.user);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchUserPosts(currentUser.id));\n  }, [newPost]);\n\n  const handleFetchUserPosts = () => dispatch(fetchUserPosts(currentUser.id));\n\n  return (\n    <div className=\"profile\">\n      <h2 className=\"profile-header\">{`${currentUser.username}'s Profile`}</h2>\n      <PostCompose />\n      <div className=\"profile-posts\">\n        {userPosts.map((post) => (\n          <Post key={post.text} fetchPosts={handleFetchUserPosts} post={post} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Profile;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { login } from '../../actions/session_actions';\nimport './login.css';\n\nfunction LoginForm() {\n  const error = useSelector((state) => state.session.error);\n\n  const dispatch = useDispatch();\n\n  const [fields, setFields] = useState({ email: '', password: '' });\n  const { email, password } = fields;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(login(fields));\n  };\n\n  const handleChange = (field) => (e) => {\n    setFields({\n      ...fields,\n      [field]: e.target.value,\n    });\n  };\n\n  const renderError = () => {\n    if (error) {\n      return (\n        <div>\n          {error.error}\n        </div>\n      );\n    }\n    return null;\n  };\n\n  return (\n    <div className=\"login-form-container\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"login-form\">\n          <input\n            type=\"text\"\n            value={email}\n            onChange={handleChange('email')}\n            placeholder=\"Email\"\n            autoComplete=\"on\"\n          />\n          <input\n            type=\"password\"\n            value={password}\n            onChange={handleChange('password')}\n            placeholder=\"Password\"\n            autoComplete=\"on\"\n          />\n          <input className=\"login-submit\" type=\"submit\" value=\"Log In\" />\n          {renderError()}\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default LoginForm;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport { signup } from '../../actions/session_actions';\nimport './signup.css';\n\nfunction SignupForm() {\n  const error = useSelector((state) => state.session.error);\n\n  const dispatch = useDispatch();\n\n  const history = useHistory();\n\n  const [fields, setFields] = useState({\n    email: '',\n    username: '',\n    password: '',\n    password2: '',\n  });\n\n  const {\n    email, username, password, password2,\n  } = fields;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    dispatch(signup(fields, history)).then((action) => {\n      if (action.type === 'RECEIVE_USER_SIGN_UP') {\n        history.push('/login');\n      }\n    });\n  };\n\n  const update = (field) => (e) => {\n    setFields({\n      ...fields,\n      [field]: e.target.value,\n    });\n  };\n\n  const renderError = () => {\n    if (error) {\n      return (\n        <div>\n          {error.error}\n        </div>\n      );\n    }\n    return null;\n  };\n\n  return (\n    <div className=\"signup-form-container\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"signup-form\">\n          <input\n            type=\"text\"\n            value={email}\n            onChange={update('email')}\n            placeholder=\"Email\"\n            autoComplete=\"on\"\n          />\n          <input\n            type=\"text\"\n            value={username}\n            onChange={update('username')}\n            placeholder=\"Username\"\n            autoComplete=\"on\"\n          />\n          <input\n            type=\"password\"\n            value={password}\n            onChange={update('password')}\n            placeholder=\"Password\"\n            autoComplete=\"on\"\n          />\n          <input\n            type=\"password\"\n            value={password2}\n            onChange={update('password2')}\n            placeholder=\"Confirm Password\"\n            autoComplete=\"on\"\n          />\n          <input className=\"signup-submit\" type=\"submit\" value=\"Sign Up\" />\n          {renderError()}\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default SignupForm;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport PostCompose from '../common/posts/post_compose';\nimport { fetchPosts } from '../../actions/post_actions';\nimport Post from '../common/posts/post';\nimport './feed.css';\n\nfunction Feed() {\n  const posts = useSelector((state) => state.posts.all);\n  const newPost = useSelector((state) => state.posts.new);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchPosts());\n  }, [newPost]);\n\n  const handleFetchPosts = () => dispatch(fetchPosts());\n\n  return (\n    <div className=\"feed\">\n      <h2 className=\"profile-header\">Your Feed</h2>\n      <PostCompose />\n      <div className=\"feed-posts\">\n        {posts.map((post) => (\n          <Post key={post.text} fetchPosts={handleFetchPosts} post={post} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Feed;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { AuthRoute, ProtectedRoute } from '../util/route_util';\nimport Home from './common/home/home';\nimport NavBar from './common/nav/navbar';\nimport Profile from './profile/profile';\nimport LoginForm from './session/login_form';\nimport SignupForm from './session/signup_form';\nimport Feed from './feed/feed';\nimport './app.css';\n\nconst App = () => (\n  <div className=\"app\">\n    <NavBar />\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <AuthRoute exact path=\"/login\" component={LoginForm} />\n      <AuthRoute exact path=\"/signup\" component={SignupForm} />\n\n      <ProtectedRoute exact path=\"/profile\" component={Profile} />\n      <ProtectedRoute exact path=\"/feed\" component={Feed} />\n    </Switch>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport App from './app';\n\nconst Root = ({ store }) => (\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>\n);\n\nRoot.propTypes = {\n  store: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default Root;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// eslint-disable-next-line camelcase\nimport jwt_decode from 'jwt-decode';\nimport { setAuthToken } from './util/session_util';\nimport { logout } from './actions/session_actions';\nimport configureStore from './store/store';\nimport Root from './components/root';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  let store;\n\n  if (localStorage.jwtToken) {\n    setAuthToken(localStorage.jwtToken);\n    const decodedUser = jwt_decode(localStorage.jwtToken);\n    const preloadedState = { session: { isAuthenticated: true, user: decodedUser } };\n    store = configureStore(preloadedState);\n    const currentTime = Date.now() / 1000;\n\n    if (decodedUser.exp < currentTime) {\n      store.dispatch(logout());\n      window.location.href = '/login';\n    }\n  } else {\n    store = configureStore({});\n  }\n  const root = document.getElementById('root');\n\n  ReactDOM.render(<Root store={store} />, root);\n});\n"],"sourceRoot":""}