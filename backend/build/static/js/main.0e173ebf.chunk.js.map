{"version":3,"sources":["util/session_util.js","actions/session_actions.js","reducers/session_reducer.js","actions/post_actions.js","util/post_util.js","reducers/posts_reducer.js","reducers/root_reducer.js","store/store.js","util/route_util.jsx","components/nav/TinyPage.png","components/nav/navbar.jsx","components/nav/navbar_container.js","components/posts/post_compose.jsx","components/posts/post_compose_container.js","components/profile/profile.jsx","components/profile/profile_container.js","components/session/login_form.jsx","components/session/login_form_container.js","components/session/signup_form.jsx","components/session/signup_form_container.js","components/feed/feed.jsx","components/feed/feed_container.js","components/app.jsx","components/root.jsx","index.jsx"],"names":["setAuthToken","token","axios","defaults","headers","common","Authorization","RECEIVE_USER_SIGN_IN","RECEIVE_SESSION_ERRORS","RECEIVE_USER_LOGOUT","RECEIVE_USER_SIGN_UP","receiveErrors","errors","type","signup","user","dispatch","userData","post","then","err","response","data","login","res","localStorage","setItem","APIUtil","decoded","jwt_decode","currentUser","catch","logout","removeItem","initialState","isAuthenticated","session","state","action","undefined","RECEIVE_POSTS","RECEIVE_NEW_POST","RECEIVE_USER_POSTS","RECEIVE_POST_ERRORS","receivePostErrors","fetchPosts","get","posts","receivePosts","fetchUserPosts","id","getUserPosts","receiveUserPosts","composePost","writePost","receiveNewPost","all","new","Object","freeze","newState","RootReducer","combineReducers","configureStore","preloadedState","createStore","rootReducer","applyMiddleware","thunk","logger","mapStateToProps","loggedIn","AuthRoute","withRouter","connect","Component","component","path","exact","render","props","to","ProtectedRoute","rest","NavBar","logoutUser","bind","getLinks","this","className","onClick","e","preventDefault","renderLogo","src","logo","alt","width","React","PostCompose","text","handleSubmit","renderErrors","setState","currentTarget","value","keys","map","error","onSubmit","onChange","update","placeholder","newPost","Profile","prevProps","length","username","_id","defaultProps","values","LoginForm","email","password","field","autoComplete","SignupForm","password2","clearedErrors","history","push","Feed","App","LoginFormContainer","SignupFormContainer","ProfileContainer","FeedContainer","Root","store","document","addEventListener","jwtToken","decodedUser","currentTime","Date","now","exp","window","location","href","root","getElementById","ReactDOM"],"mappings":"+SAEaA,EAAe,SAACC,GACvBA,EACFC,IAAMC,SAASC,QAAQC,OAAOC,cAAgBL,SAEvCC,IAAMC,SAASC,QAAQC,OAAOC,eCF5BC,EAAuB,uBACvBC,EAAyB,yBACzBC,EAAsB,sBACtBC,EAAuB,uBAWvBC,EAAgB,SAACC,GAAD,MAAa,CACxCC,KAAML,EACNI,WAOWE,EAAS,SAACC,GAAD,OAAU,SAACC,GAAD,ODjBTC,ECkBNF,EDlBmBb,IAAMgB,KAAK,kBAAmBD,ICkB3CE,MAAK,kBACxBH,EAfoC,CACtCH,KAAMH,OAeH,SAACU,GAAD,OACDJ,EAASL,EAAcS,EAAIC,SAASC,UDrBlB,IAACL,ICyBVM,EAAQ,SAACR,GAAD,OAAU,SAACC,GAAD,ODvBTC,ECwBNF,EDxBmBb,IAAMgB,KAAK,eAAgBD,ICwBxCE,MAAK,SAACK,GAAS,IACzBvB,EAAUuB,EAAIF,KAAdrB,MAERwB,aAAaC,QAAQ,WAAYzB,GACjC0B,EAAqB1B,GACrB,IAAM2B,EAAUC,YAAW5B,GAC3Be,EAjCgD,CAClDH,KAAMN,EACNuB,YA+B8BF,OAE3BG,OAAM,SAACX,GACNJ,EAASL,EAAcS,EAAIC,SAASC,UDjCrB,IAACL,ICqCTe,EAAS,kBAAM,SAAChB,GAE3BS,aAAaQ,WAAW,YACxBN,GAAqB,GACrBX,EA9B+B,CAC/BH,KAAMJ,M,wCCjBFyB,EAAe,CACnBC,iBAAiB,EACjBpB,KAAM,GACNH,OAAQ,IA+BKwB,EA5BC,WAAmC,IAAlCC,EAAiC,uDAAzBH,EAAcI,EAAW,uCAChD,OAAQA,EAAOzB,MACb,KAAKN,EACH,OAAO,2BACF8B,GADL,IAEEF,kBAAmBG,EAAOR,YAC1Bf,KAAMuB,EAAOR,cAEjB,KAAKrB,EACH,OAAO,2BACF4B,GADL,IAEEF,iBAAiB,EACjBpB,UAAMwB,IAEV,KAAK7B,EACH,OAAO,eACF2B,GAEP,KAAK7B,EACH,OAAO,2BACF6B,GADL,IAEEzB,OAAQ0B,EAAO1B,SAEnB,QACE,OAAOyB,ICnCAG,EAAgB,gBAChBC,EAAmB,mBACnBC,EAAqB,qBACrBC,EAAsB,sBAiBtBC,EAAoB,SAAChC,GAAD,MAAa,CAC5CC,KAAM8B,EACN/B,WAGWiC,EAAa,kBAAM,SAAC7B,GAAD,OCzBFd,IAAM4C,IAAI,UD2BnC3B,MAAK,SAAC4B,GAAD,OAAW/B,EAtBO,SAAC+B,GAAD,MAAY,CACtClC,KAAM2B,EACNO,SAoB4BC,CAAaD,OACtChB,OAAM,SAACX,GAAD,OAASJ,EAAS4B,EAAkBxB,EAAIC,SAASC,YAG/C2B,EAAiB,SAACC,GAAD,OAAQ,SAAClC,GAAD,OC7BV,SAACkC,GAAD,OAAQhD,IAAM4C,IAAN,sBAAyBI,ID8B3DC,CAAaD,GACV/B,MAAK,SAAC4B,GAAD,OAAW/B,EAvBW,SAAC+B,GAAD,MAAY,CAC1ClC,KAAM6B,EACNK,SAqB4BK,CAAiBL,OAC1ChB,OAAM,SAACX,GAAD,OAASJ,EAAS4B,EAAkBxB,EAAIC,SAASC,YAG/C+B,EAAc,SAAC/B,GAAD,OAAU,SAACN,GAAD,OCjCZ,SAACM,GAAD,OAAUpB,IAAMgB,KAAK,UAAWI,GDkCvDgC,CAAUhC,GACPH,MAAK,SAACD,GAAD,OAAUF,EAxBU,SAACE,GAAD,MAAW,CACvCL,KAAM4B,EACNvB,QAsB2BqC,CAAerC,OACvCa,OAAM,SAACX,GAAD,OAASJ,EAAS4B,EAAkBxB,EAAIC,SAASC,YEnCtDY,EAAe,CACnBsB,IAAK,GACLzC,KAAM,GACN0C,SAAKlB,EACL3B,OAAQ,IA0BKmC,EAvBD,WAAmC,IAAlCV,EAAiC,uDAAzBH,EAAcI,EAAW,uCAC9CoB,OAAOC,OAAOtB,GACd,IAAMuB,EAAQ,eAAQvB,GACtB,OAAQC,EAAOzB,MACb,KAAK2B,EAEH,OADAoB,EAASJ,IAAMlB,EAAOS,MAAMzB,KACrBsC,EACT,KAAKlB,EAEH,OADAkB,EAAS7C,KAAOuB,EAAOS,MAAMzB,KACtBsC,EACT,KAAKnB,EAEH,OADAmB,EAASH,IAAMnB,EAAOpB,KAAKI,KACpBsC,EACT,KAAKjB,EACH,OAAO,2BACFN,GADL,IAEEzB,OAAQ0B,EAAO1B,SAEnB,QACE,OAAOyB,ICzBEwB,EAJKC,YAAgB,CAClC1B,UAASW,UCSIgB,EARQ,eAACC,EAAD,uDAAkB,GAAlB,OACrBC,YACEC,EACAF,EACAG,YAAgBC,IAAOC,O,8BC4BrBC,EAAkB,SAACjC,GAAD,MACtB,CAAEkC,SAAUlC,EAAMD,QAAQD,kBAGfqC,EAAYC,YAAWC,YAAQJ,EAARI,EAnCvB,SAAC,GAAD,IACAC,EADA,EACXC,UAAsBC,EADX,EACWA,KAAMN,EADjB,EACiBA,SAAUO,EAD3B,EAC2BA,MAD3B,OAGX,cAAC,IAAD,CACED,KAAMA,EACNC,MAAOA,EACPC,OAAQ,SAACC,GAAD,OACLT,EAIC,cAAC,IAAD,CAAUU,GAAG,UAHb,cAACN,EAAD,eAAeK,WA6BVE,EAAiBT,YAAWC,YAAQJ,EAARI,EApBvB,SAAC,GAAD,IAAcC,EAAd,EAAGC,UAAsBL,EAAzB,EAAyBA,SAAaY,EAAtC,+CAChB,cAAC,IAAD,2BACMA,GADN,IAEEJ,OAAQ,SAACC,GAAD,OAAYT,EAClB,cAACI,EAAD,eAAeK,IAGf,cAAC,IAAD,CAAUC,GAAG,mB,uCC/BJ,MAA0B,qCC2D1BG,G,wDApDb,WAAYJ,GAAQ,IAAD,8BACjB,cAAMA,IACDK,WAAa,EAAKA,WAAWC,KAAhB,gBAClB,EAAKC,SAAW,EAAKA,SAASD,KAAd,gBAHC,E,uDAQjB,OADqBE,KAAKR,MAAlBT,SAGJ,sBAAKkB,UAAU,YAAf,UACE,wBAAQ5E,KAAK,SAAS6E,QAASF,KAAKH,WAApC,oBACA,cAAC,IAAD,CAAMJ,GAAG,QAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,WAAT,wBAKJ,sBAAKQ,UAAU,YAAf,UACE,cAAC,IAAD,CAAMR,GAAG,UAAT,oBACA,cAAC,IAAD,CAAMA,GAAG,SAAT,wB,iCAKKU,GAAI,IACL3D,EAAWwD,KAAKR,MAAhBhD,OACR2D,EAAEC,iBACF5D,M,+BAUA,OACE,sBAAKyD,UAAU,SAAf,UACGL,EAAOS,aACPL,KAAKD,iB,oCATV,OACE,qBAAKE,UAAU,OAAOK,IAAKC,EAAMC,IAAI,OAAOC,MAAM,c,GAlCnCC,IAAMvB,YCGZD,eAJS,SAACrC,GAAD,MAAY,CAClCkC,SAAUlC,EAAMD,QAAQD,mBAKxB,CAAEH,UAFW0C,CAGbU,GCiEae,I,wDAxEb,WAAYnB,GAAQ,IAAD,8BACjB,cAAMA,IAED3C,MAAQ,CACX+D,KAAM,IAGR,EAAKC,aAAe,EAAKA,aAAaf,KAAlB,gBACpB,EAAKgB,aAAe,EAAKA,aAAahB,KAAlB,gBARH,E,yDAWNK,GAAI,IACPS,EAASZ,KAAKnD,MAAd+D,KACA/C,EAAgBmC,KAAKR,MAArB3B,YACRsC,EAAEC,iBAKFvC,EAJa,CACX+C,SAIFZ,KAAKe,SAAS,CAAEH,KAAM,O,+BAGd,IAAD,OACP,OAAO,SAACT,GAAD,OAAO,EAAKY,SAAS,CAC1BH,KAAMT,EAAEa,cAAcC,W,qCAIV,IACN7F,EAAW4E,KAAKR,MAAhBpE,OACR,OAAIA,EAEA,6BACG8C,OAAOgD,KAAK9F,GAAQ+F,KAAI,SAACC,GAAD,OACvB,6BACGhG,EAAOgG,IADV,gBAAkBA,SAOnB,O,+BAGC,IACAR,EAASZ,KAAKnD,MAAd+D,KACR,OACE,qBAAKX,UAAU,oBAAf,SACE,sBAAMoB,SAAUrB,KAAKa,aAArB,SACE,sBAAKZ,UAAU,oBAAf,UACE,6CACA,0BACEgB,MAAOL,EACPU,SAAUtB,KAAKuB,SACfC,YAAY,qBACZvB,UAAU,sBAEZ,uBAAO5E,KAAK,SAAS4F,MAAM,OAAOhB,UAAU,wBAC3CD,KAAKc,0B,GA5DQJ,IAAMvB,YCUjBD,gBAVS,SAACrC,GAAD,MAAY,CAClCP,YAAaO,EAAMD,QAAQrB,KAC3BkG,QAAS5E,EAAMU,MAAMU,IACrB7C,OAAQyB,EAAMU,MAAMnC,WAGK,SAACI,GAAD,MAAe,CACxCqC,YAAa,SAAC/B,GAAD,OAAUN,EAASqC,EAAY/B,QAG/BoD,CAA6CyB,ICTtDe,I,wLACiB,IAAD,EACsB1B,KAAKR,OAC7C/B,EAFkB,EACVA,gBADU,EACMnB,YACGoB,M,yCAGViE,GAAY,IAAD,EACqB3B,KAAKR,MAA9CiC,EADoB,EACpBA,QAAShE,EADW,EACXA,eAAgBnB,EADL,EACKA,YAC7BmF,IAAYE,EAAUF,SACxBhE,EAAenB,EAAYoB,M,+BAIrB,IAAD,EACwBsC,KAAKR,MAA5BjC,EADD,EACCA,MAAOjB,EADR,EACQA,YACf,OAAqB,IAAjBiB,EAAMqE,OACA,yDAGR,sBAAK3B,UAAU,eAAf,UACE,oBAAIA,UAAU,iBAAd,SAAgC3D,EAAYuF,WAC5C,cAAC,GAAD,IACA,qBAAK5B,UAAU,gBAAf,SACG1C,EAAM4D,KAAI,SAACzF,GAAD,OAET,aADA,CACA,OAAKuE,UAAU,eAAf,SACE,mBAAGA,UAAU,oBAAb,SAAkCvE,EAAKkF,QADNlF,EAAKoG,iB,GAzB9BpB,IAAMvB,YA0C5BuC,GAAQK,aAAe,CACrBN,aAAS1E,GAGI2E,UCrCAxC,gBAVS,SAACrC,GAAD,MAAY,CAClCU,MAAOW,OAAO8D,OAAOnF,EAAMU,MAAMhC,MACjCkG,QAAS5E,EAAMU,MAAMU,IACrB3B,YAAaO,EAAMD,QAAQrB,SAGF,SAACC,GAAD,MAAe,CACxCiC,eAAgB,SAACC,GAAD,OAAQlC,EAASiC,EAAeC,QAGnCwB,CAA6CwC,I,SCVtDO,G,kDACJ,WAAYzC,GAAQ,IAAD,8BACjB,cAAMA,IAED3C,MAAQ,CACXqF,MAAO,GACPC,SAAU,IAGZ,EAAKtB,aAAe,EAAKA,aAAaf,KAAlB,gBACpB,EAAKgB,aAAe,EAAKA,aAAahB,KAAlB,gBATH,E,yDAYNK,GACXA,EAAEC,iBADY,MAEcJ,KAAKnD,MAAzBqF,EAFM,EAENA,MAAOC,EAFD,EAECA,UAMfpG,EALkBiE,KAAKR,MAAfzD,OACK,CACXmG,QACAC,e,6BAKGC,GAAQ,IAAD,OACZ,OAAO,SAACjC,GAAD,OAAO,EAAKY,SAAL,gBACXqB,EAAQjC,EAAEa,cAAcC,W,qCAIb,IACN7F,EAAW4E,KAAKR,MAAhBpE,OACR,OAAIA,EAEA,6BACG8C,OAAOgD,KAAK9F,GAAQ+F,KAAI,SAACC,GAAD,OACvB,6BACGhG,EAAOgG,IADV,gBAAkBA,SAOnB,O,+BAGC,IAAD,EACqBpB,KAAKnD,MAAzBqF,EADD,EACCA,MAAOC,EADR,EACQA,SACf,OACE,qBAAKlC,UAAU,uBAAf,SACE,sBAAMoB,SAAUrB,KAAKa,aAArB,SACE,sBAAKZ,UAAU,aAAf,UACE,uBACE5E,KAAK,OACL4F,MAAOiB,EACPZ,SAAUtB,KAAKuB,OAAO,SACtBC,YAAY,QACZa,aAAa,OAEf,uBACEhH,KAAK,WACL4F,MAAOkB,EACPb,SAAUtB,KAAKuB,OAAO,YACtBC,YAAY,WACZa,aAAa,OAEf,uBAAOpC,UAAU,eAAe5E,KAAK,SAAS4F,MAAM,WACnDjB,KAAKc,0B,GAnEMJ,IAAMvB,WAgF9B8C,GAAUF,aAAe,CACvB3G,YAAQ2B,GAGKkC,mBAAWgD,IC3EX/C,gBATS,SAACrC,GAAD,MAAY,CAClCP,YAAaO,EAAMD,QAAQrB,KAC3BH,OAAQyB,EAAMD,QAAQxB,WAGG,SAACI,GAAD,MAAe,CACxCO,MAAO,SAACR,GAAD,OAAUC,EAASO,EAAMR,QAGnB2D,CAGb+C,ICXIK,I,wDACJ,WAAY9C,GAAQ,IAAD,8BACjB,cAAMA,IACD3C,MAAQ,CACXqF,MAAO,GACPL,SAAU,GACVM,SAAU,GACVI,UAAW,IAGb,EAAK1B,aAAe,EAAKA,aAAaf,KAAlB,gBACpB,EAAK0C,eAAgB,EAVJ,E,yDAaNrC,GAAI,IAAD,EAGVH,KAAKnD,MADPqF,EAFY,EAEZA,MAAOL,EAFK,EAELA,SAAUM,EAFL,EAEKA,SAAUI,EAFf,EAEeA,UAFf,EAIcvC,KAAKR,MAAzBiD,EAJM,EAINA,QAASnH,EAJH,EAIGA,OACjB6E,EAAEC,iBAQF9E,EAPa,CACX4G,QACAL,WACAM,WACAI,aAGWE,GAAS9G,MAAK,SAACmB,GACN,yBAAhBA,EAAOzB,MACToH,EAAQC,KAAK,e,6BAKZN,GAAQ,IAAD,OACZ,OAAO,SAACjC,GAAD,OAAO,EAAKY,SAAL,gBACXqB,EAAQjC,EAAEa,cAAcC,W,qCAIb,IACN7F,EAAW4E,KAAKR,MAAhBpE,OACR,OAAIA,EAEA,6BACG8C,OAAOgD,KAAK9F,GAAQ+F,KAAI,SAACC,GAAD,OACvB,6BACGhG,EAAOgG,IADV,gBAAkBA,SAOnB,O,+BAGC,IAAD,EAGHpB,KAAKnD,MADPqF,EAFK,EAELA,MAAOL,EAFF,EAEEA,SAAUM,EAFZ,EAEYA,SAAUI,EAFtB,EAEsBA,UAE7B,OACE,qBAAKtC,UAAU,wBAAf,SACE,sBAAMoB,SAAUrB,KAAKa,aAArB,SACE,sBAAKZ,UAAU,cAAf,UACE,uBACE5E,KAAK,OACL4F,MAAOiB,EACPZ,SAAUtB,KAAKuB,OAAO,SACtBC,YAAY,QACZa,aAAa,OAEf,uBACEhH,KAAK,OACL4F,MAAOY,EACPP,SAAUtB,KAAKuB,OAAO,YACtBC,YAAY,WACZa,aAAa,OAEf,uBACEhH,KAAK,WACL4F,MAAOkB,EACPb,SAAUtB,KAAKuB,OAAO,YACtBC,YAAY,WACZa,aAAa,OAEf,uBACEhH,KAAK,WACL4F,MAAOsB,EACPjB,SAAUtB,KAAKuB,OAAO,aACtBC,YAAY,mBACZa,aAAa,OAEf,uBAAOpC,UAAU,gBAAgB5E,KAAK,SAAS4F,MAAM,YACpDjB,KAAKc,0B,GA7FOJ,IAAMvB,YA2G/BmD,GAAWP,aAAe,CACxB3G,YAAQ2B,GAGKkC,mBAAWqD,ICxGXpD,gBARS,SAACrC,GAAD,MAAY,CAClCzB,OAAQyB,EAAMD,QAAQxB,WAGG,SAACI,GAAD,MAAe,CACxCF,OAAQ,SAACC,GAAD,OAAUC,EAASF,EAAOC,QAGrB2D,CAGboD,ICTIK,I,yLAGFtF,EADuB2C,KAAKR,MAApBnC,gB,yCAISsE,GAAY,IAAD,EACI3B,KAAKR,MAA7BiC,EADoB,EACpBA,QAASpE,EADW,EACXA,WACboE,IAAYE,EAAUF,SACxBpE,M,+BAIM,IACAE,EAAUyC,KAAKR,MAAfjC,MACR,OAAqB,IAAjBA,EAAMqE,OACA,qDAGR,sBAAK3B,UAAU,YAAf,UACE,2CACA,cAAC,GAAD,IACA,qBAAKA,UAAU,aAAf,SACG1C,EAAM4D,KAAI,SAACzF,GAAD,OAET,cADA,CACA,OAAKuE,UAAU,YAAf,UACE,6BAAKvE,EAAKH,KAAKsG,WACf,mBAAG5B,UAAU,iBAAb,SAA+BvE,EAAKkF,SAFNlF,EAAKoG,iB,GAzB9BpB,IAAMvB,YA0CzBwD,GAAKZ,aAAe,CAClBN,aAAS1E,GAGIkC,mBAAW0D,ICrCXzD,gBAXS,SAACrC,GAAD,MAAY,CAClCU,MAAOW,OAAO8D,OAAOnF,EAAMU,MAAMS,KACjC1B,YAAaO,EAAMD,QAAQrB,KAC3BkG,QAAS5E,EAAMU,MAAMU,IACrB7C,OAAQyB,EAAMD,QAAQxB,WAGG,SAACI,GAAD,MAAe,CACxC6B,WAAY,kBAAM7B,EAAS6B,SAGd6B,CAA6CyD,ICQ7CC,I,MAbH,kBACV,sBAAK3C,UAAU,MAAf,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAACjB,EAAD,CAAWM,OAAK,EAACD,KAAK,SAASD,UAAWyD,KAC1C,cAAC7D,EAAD,CAAWM,OAAK,EAACD,KAAK,UAAUD,UAAW0D,KAE3C,cAACpD,EAAD,CAAgBJ,OAAK,EAACD,KAAK,WAAWD,UAAW2D,KACjD,cAACrD,EAAD,CAAgBJ,OAAK,EAACD,KAAK,QAAQD,UAAW4D,aCArCC,GAZF,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACX,cAAC,IAAD,CAAUA,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,GAAD,SCANC,SAASC,iBAAiB,oBAAoB,WAC5C,IAAIF,EAEJ,GAAIjH,aAAaoH,SAAU,CACzB7I,EAAayB,aAAaoH,UAC1B,IAAMC,EAAcjH,YAAWJ,aAAaoH,UAE5CH,EAAQ3E,EADe,CAAE3B,QAAS,CAAED,iBAAiB,EAAMpB,KAAM+H,KAEjE,IAAMC,EAAcC,KAAKC,MAAQ,IAE7BH,EAAYI,IAAMH,IACpBL,EAAM1H,SAASgB,KACfmH,OAAOC,SAASC,KAAO,eAGzBX,EAAQ3E,EAAe,IAEzB,IAAMuF,EAAOX,SAASY,eAAe,QAErCC,IAASzE,OAAO,cAAC,GAAD,CAAM2D,MAAOA,IAAWY,Q","file":"static/js/main.0e173ebf.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const setAuthToken = (token) => {\n  if (token) {\n    axios.defaults.headers.common.Authorization = token;\n  } else {\n    delete axios.defaults.headers.common.Authorization;\n  }\n};\n\nexport const signup = (userData) => axios.post('/users/register', userData);\n\nexport const login = (userData) => axios.post('/users/login', userData);\n","// eslint-disable-next-line camelcase\nimport jwt_decode from 'jwt-decode';\nimport * as APIUtil from '../util/session_util';\n\nexport const RECEIVE_USER_SIGN_IN = 'RECEIVE_USER_SIGN_IN';\nexport const RECEIVE_SESSION_ERRORS = 'RECEIVE_SESSION_ERRORS';\nexport const RECEIVE_USER_LOGOUT = 'RECEIVE_USER_LOGOUT';\nexport const RECEIVE_USER_SIGN_UP = 'RECEIVE_USER_SIGN_UP';\n\nexport const receiveCurrentUser = (currentUser) => ({\n  type: RECEIVE_USER_SIGN_IN,\n  currentUser,\n});\n\nexport const receiveUserSignUp = () => ({\n  type: RECEIVE_USER_SIGN_UP,\n});\n\nexport const receiveErrors = (errors) => ({\n  type: RECEIVE_SESSION_ERRORS,\n  errors,\n});\n\nexport const logoutUser = () => ({\n  type: RECEIVE_USER_LOGOUT,\n});\n\nexport const signup = (user) => (dispatch) => (\n  APIUtil.signup(user).then(() => (\n    dispatch(receiveUserSignUp())\n  ), (err) => (\n    dispatch(receiveErrors(err.response.data))\n  ))\n);\n\nexport const login = (user) => (dispatch) => (\n  APIUtil.login(user).then((res) => {\n    const { token } = res.data;\n    // eslint-disable-next-line no-undef\n    localStorage.setItem('jwtToken', token);\n    APIUtil.setAuthToken(token);\n    const decoded = jwt_decode(token);\n    dispatch(receiveCurrentUser(decoded));\n  })\n    .catch((err) => {\n      dispatch(receiveErrors(err.response.data));\n    })\n);\n\nexport const logout = () => (dispatch) => {\n  // eslint-disable-next-line no-undef\n  localStorage.removeItem('jwtToken');\n  APIUtil.setAuthToken(false);\n  dispatch(logoutUser());\n};\n","import {\n  RECEIVE_USER_SIGN_IN,\n  RECEIVE_USER_LOGOUT,\n  RECEIVE_USER_SIGN_UP,\n  RECEIVE_SESSION_ERRORS,\n} from '../actions/session_actions';\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {},\n  errors: [],\n};\n\nconst session = (state = initialState, action) => {\n  switch (action.type) {\n    case RECEIVE_USER_SIGN_IN:\n      return {\n        ...state,\n        isAuthenticated: !!action.currentUser,\n        user: action.currentUser,\n      };\n    case RECEIVE_USER_LOGOUT:\n      return {\n        ...state,\n        isAuthenticated: false,\n        user: undefined,\n      };\n    case RECEIVE_USER_SIGN_UP:\n      return {\n        ...state,\n      };\n    case RECEIVE_SESSION_ERRORS:\n      return {\n        ...state,\n        errors: action.errors,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default session;\n","import { getPosts, getUserPosts, writePost } from '../util/post_util';\n\nexport const RECEIVE_POSTS = 'RECEIVE_POSTS';\nexport const RECEIVE_NEW_POST = 'RECEIVE_NEW_POST';\nexport const RECEIVE_USER_POSTS = 'RECEIVE_USER_POSTS';\nexport const RECEIVE_POST_ERRORS = 'RECEIVE_POST_ERRORS';\n\nexport const receivePosts = (posts) => ({\n  type: RECEIVE_POSTS,\n  posts,\n});\n\nexport const receiveUserPosts = (posts) => ({\n  type: RECEIVE_USER_POSTS,\n  posts,\n});\n\nexport const receiveNewPost = (post) => ({\n  type: RECEIVE_NEW_POST,\n  post,\n});\n\nexport const receivePostErrors = (errors) => ({\n  type: RECEIVE_POST_ERRORS,\n  errors,\n});\n\nexport const fetchPosts = () => (dispatch) => (\n  getPosts()\n    .then((posts) => dispatch(receivePosts(posts)))\n    .catch((err) => dispatch(receivePostErrors(err.response.data)))\n);\n\nexport const fetchUserPosts = (id) => (dispatch) => (\n  getUserPosts(id)\n    .then((posts) => dispatch(receiveUserPosts(posts)))\n    .catch((err) => dispatch(receivePostErrors(err.response.data)))\n);\n\nexport const composePost = (data) => (dispatch) => (\n  writePost(data)\n    .then((post) => dispatch(receiveNewPost(post)))\n    .catch((err) => dispatch(receivePostErrors(err.response.data)))\n);\n","import axios from 'axios';\n\nexport const getPosts = () => axios.get('/posts');\n\nexport const getUserPosts = (id) => axios.get(`/posts/user/${id}`);\n\nexport const writePost = (data) => axios.post('/posts/', data);\n","import {\n  RECEIVE_POSTS,\n  RECEIVE_USER_POSTS,\n  RECEIVE_NEW_POST,\n  RECEIVE_POST_ERRORS,\n} from '../actions/post_actions';\n\nconst initialState = {\n  all: {},\n  user: {},\n  new: undefined,\n  errors: [],\n};\n\nconst posts = (state = initialState, action) => {\n  Object.freeze(state);\n  const newState = { ...state };\n  switch (action.type) {\n    case RECEIVE_POSTS:\n      newState.all = action.posts.data;\n      return newState;\n    case RECEIVE_USER_POSTS:\n      newState.user = action.posts.data;\n      return newState;\n    case RECEIVE_NEW_POST:\n      newState.new = action.post.data;\n      return newState;\n    case RECEIVE_POST_ERRORS:\n      return {\n        ...state,\n        errors: action.errors,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default posts;\n","import { combineReducers } from 'redux';\nimport session from './session_reducer';\nimport posts from './posts_reducer';\n\nconst RootReducer = combineReducers({\n  session, posts,\n});\n\nexport default RootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\nimport rootReducer from '../reducers/root_reducer';\n\nconst configureStore = (preloadedState = {}) => (\n  createStore(\n    rootReducer,\n    preloadedState,\n    applyMiddleware(thunk, logger),\n  )\n);\n\nexport default configureStore;\n","/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect, withRouter } from 'react-router-dom';\n\n// Passed in from parent component or from mapStateToProps\nconst Auth = ({\n  component: Component, path, loggedIn, exact,\n}) => (\n  <Route\n    path={path}\n    exact={exact}\n    render={(props) => (\n      !loggedIn ? (\n        <Component {...props} />\n      ) : (\n      // Redirect to the home page if the user is authenticated\n        <Redirect to=\"/feed\" />\n      )\n    )}\n  />\n);\n\nconst Protected = ({ component: Component, loggedIn, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) => (loggedIn ? (\n      <Component {...props} />\n    ) : (\n    // Redirect to the login page if the user is already authenticated\n      <Redirect to=\"/login\" />\n    ))}\n  />\n);\n\n// Use the isAuthenitcated slice of state to determine whether a user is logged in\n\nconst mapStateToProps = (state) => (\n  { loggedIn: state.session.isAuthenticated }\n);\n\nexport const AuthRoute = withRouter(connect(mapStateToProps)(Auth));\n\nexport const ProtectedRoute = withRouter(connect(mapStateToProps)(Protected));\n","export default __webpack_public_path__ + \"static/media/TinyPage.08ef7619.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport logo from './TinyPage.png';\nimport './nav.css';\n\nclass NavBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.logoutUser = this.logoutUser.bind(this);\n    this.getLinks = this.getLinks.bind(this);\n  }\n\n  getLinks() {\n    const { loggedIn } = this.props;\n    if (loggedIn) {\n      return (\n        <div className=\"nav-links\">\n          <button type=\"submit\" onClick={this.logoutUser}>Logout</button>\n          <Link to=\"/feed\">Feed</Link>\n          <Link to=\"/profile\">Profile</Link>\n        </div>\n      );\n    }\n    return (\n      <div className=\"nav-links\">\n        <Link to=\"/signup\">Signup</Link>\n        <Link to=\"/login\">Login</Link>\n      </div>\n    );\n  }\n\n  logoutUser(e) {\n    const { logout } = this.props;\n    e.preventDefault();\n    logout();\n  }\n\n  static renderLogo() {\n    return (\n      <img className=\"logo\" src={logo} alt=\"logo\" width=\"100px\" />\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"navbar\">\n        {NavBar.renderLogo()}\n        {this.getLinks()}\n      </div>\n    );\n  }\n}\n\nNavBar.propTypes = {\n  loggedIn: PropTypes.bool.isRequired,\n  logout: PropTypes.func.isRequired,\n};\n\nexport default NavBar;\n","import { connect } from 'react-redux';\nimport { logout } from '../../actions/session_actions';\n\nimport NavBar from './navbar';\n\nconst mapStateToProps = (state) => ({\n  loggedIn: state.session.isAuthenticated,\n});\n\nexport default connect(\n  mapStateToProps,\n  { logout },\n)(NavBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './post_compose.css';\n\nclass PostCompose extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: '',\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.renderErrors = this.renderErrors.bind(this);\n  }\n\n  handleSubmit(e) {\n    const { text } = this.state;\n    const { composePost } = this.props;\n    e.preventDefault();\n    const post = {\n      text,\n    };\n\n    composePost(post);\n    this.setState({ text: '' });\n  }\n\n  update() {\n    return (e) => this.setState({\n      text: e.currentTarget.value,\n    });\n  }\n\n  renderErrors() {\n    const { errors } = this.props;\n    if (errors) {\n      return (\n        <ul>\n          {Object.keys(errors).map((error) => (\n            <li key={`error-${error}`}>\n              {errors[error]}\n            </li>\n          ))}\n        </ul>\n      );\n    }\n    return null;\n  }\n\n  render() {\n    const { text } = this.state;\n    return (\n      <div className=\"post-compose-card\">\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"post-compose-form\">\n            <h3>Create Post</h3>\n            <textarea\n              value={text}\n              onChange={this.update()}\n              placeholder=\"Write your post...\"\n              className=\"post-compose-text\"\n            />\n            <input type=\"submit\" value=\"Post\" className=\"post-compose-submit\" />\n            {this.renderErrors()}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nPostCompose.propTypes = {\n  errors: PropTypes.instanceOf(Array).isRequired,\n  composePost: PropTypes.func.isRequired,\n};\n\nexport default PostCompose;\n","import { connect } from 'react-redux';\nimport { composePost } from '../../actions/post_actions';\nimport PostCompose from './post_compose';\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.session.user,\n  newPost: state.posts.new,\n  errors: state.posts.errors,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  composePost: (data) => dispatch(composePost(data)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostCompose);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PostComposeContainer from '../posts/post_compose_container';\nimport './profile.css';\n\nclass Profile extends React.Component {\n  componentDidMount() {\n    const { fetchUserPosts, currentUser } = this.props;\n    fetchUserPosts(currentUser.id);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { newPost, fetchUserPosts, currentUser } = this.props;\n    if (newPost !== prevProps.newPost) {\n      fetchUserPosts(currentUser.id);\n    }\n  }\n\n  render() {\n    const { posts, currentUser } = this.props;\n    if (posts.length === 0) {\n      return (<div>This user has no Posts</div>);\n    }\n    return (\n      <div className=\"profile-card\">\n        <h1 className=\"profile-header\">{currentUser.username}</h1>\n        <PostComposeContainer />\n        <div className=\"profile-posts\">\n          {posts.map((post) => (\n            // eslint-disable-next-line no-underscore-dangle\n            <div className=\"profile-post\" key={post._id}>\n              <p className=\"profile-post-text\">{post.text}</p>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nProfile.propTypes = {\n  posts: PropTypes.instanceOf(Array).isRequired,\n  newPost: PropTypes.instanceOf(Object),\n  currentUser: PropTypes.instanceOf(Object).isRequired,\n  fetchUserPosts: PropTypes.func.isRequired,\n};\n\nProfile.defaultProps = {\n  newPost: undefined,\n};\n\nexport default Profile;\n","import { connect } from 'react-redux';\nimport { fetchUserPosts } from '../../actions/post_actions';\nimport Profile from './profile';\n\nconst mapStateToProps = (state) => ({\n  posts: Object.values(state.posts.user),\n  newPost: state.posts.new,\n  currentUser: state.session.user,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchUserPosts: (id) => dispatch(fetchUserPosts(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.renderErrors = this.renderErrors.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const { email, password } = this.state;\n    const { login } = this.props;\n    const user = {\n      email,\n      password,\n    };\n    login(user);\n  }\n\n  update(field) {\n    return (e) => this.setState({\n      [field]: e.currentTarget.value,\n    });\n  }\n\n  renderErrors() {\n    const { errors } = this.props;\n    if (errors) {\n      return (\n        <ul>\n          {Object.keys(errors).map((error) => (\n            <li key={`error-${error}`}>\n              {errors[error]}\n            </li>\n          ))}\n        </ul>\n      );\n    }\n    return null;\n  }\n\n  render() {\n    const { email, password } = this.state;\n    return (\n      <div className=\"login-form-container\">\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"login-form\">\n            <input\n              type=\"text\"\n              value={email}\n              onChange={this.update('email')}\n              placeholder=\"Email\"\n              autoComplete=\"on\"\n            />\n            <input\n              type=\"password\"\n              value={password}\n              onChange={this.update('password')}\n              placeholder=\"Password\"\n              autoComplete=\"on\"\n            />\n            <input className=\"login-submit\" type=\"submit\" value=\"Log In\" />\n            {this.renderErrors()}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nLoginForm.propTypes = {\n  errors: PropTypes.instanceOf(Object),\n  login: PropTypes.func.isRequired,\n};\n\nLoginForm.defaultProps = {\n  errors: undefined,\n};\n\nexport default withRouter(LoginForm);\n","import { connect } from 'react-redux';\nimport { login } from '../../actions/session_actions';\nimport LoginForm from './login_form';\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.session.user,\n  errors: state.session.errors,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  login: (user) => dispatch(login(user)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(LoginForm);\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './session.css';\n\nclass SignupForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      username: '',\n      password: '',\n      password2: '',\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.clearedErrors = false;\n  }\n\n  handleSubmit(e) {\n    const {\n      email, username, password, password2,\n    } = this.state;\n    const { history, signup } = this.props;\n    e.preventDefault();\n    const user = {\n      email,\n      username,\n      password,\n      password2,\n    };\n\n    signup(user, history).then((action) => {\n      if (action.type === 'RECEIVE_USER_SIGN_UP') {\n        history.push('/login');\n      }\n    });\n  }\n\n  update(field) {\n    return (e) => this.setState({\n      [field]: e.currentTarget.value,\n    });\n  }\n\n  renderErrors() {\n    const { errors } = this.props;\n    if (errors) {\n      return (\n        <ul>\n          {Object.keys(errors).map((error) => (\n            <li key={`error-${error}`}>\n              {errors[error]}\n            </li>\n          ))}\n        </ul>\n      );\n    }\n    return null;\n  }\n\n  render() {\n    const {\n      email, username, password, password2,\n    } = this.state;\n    return (\n      <div className=\"signup-form-container\">\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"signup-form\">\n            <input\n              type=\"text\"\n              value={email}\n              onChange={this.update('email')}\n              placeholder=\"Email\"\n              autoComplete=\"on\"\n            />\n            <input\n              type=\"text\"\n              value={username}\n              onChange={this.update('username')}\n              placeholder=\"Username\"\n              autoComplete=\"on\"\n            />\n            <input\n              type=\"password\"\n              value={password}\n              onChange={this.update('password')}\n              placeholder=\"Password\"\n              autoComplete=\"on\"\n            />\n            <input\n              type=\"password\"\n              value={password2}\n              onChange={this.update('password2')}\n              placeholder=\"Confirm Password\"\n              autoComplete=\"on\"\n            />\n            <input className=\"signup-submit\" type=\"submit\" value=\"Sign Up\" />\n            {this.renderErrors()}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nSignupForm.propTypes = {\n  signup: PropTypes.func.isRequired,\n  errors: PropTypes.instanceOf(Object),\n  history: PropTypes.instanceOf(Object).isRequired,\n};\n\nSignupForm.defaultProps = {\n  errors: undefined,\n};\n\nexport default withRouter(SignupForm);\n","import { connect } from 'react-redux';\nimport { signup } from '../../actions/session_actions';\nimport SignupForm from './signup_form';\n\nconst mapStateToProps = (state) => ({\n  errors: state.session.errors,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  signup: (user) => dispatch(signup(user)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(SignupForm);\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport PostComposeContainer from '../posts/post_compose_container';\nimport './feed.css';\n\nclass Feed extends React.Component {\n  componentDidMount() {\n    const { fetchPosts } = this.props;\n    fetchPosts();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { newPost, fetchPosts } = this.props;\n    if (newPost !== prevProps.newPost) {\n      fetchPosts();\n    }\n  }\n\n  render() {\n    const { posts } = this.props;\n    if (posts.length === 0) {\n      return (<div>There are no Posts</div>);\n    }\n    return (\n      <div className=\"feed-card\">\n        <h2>Your Feed</h2>\n        <PostComposeContainer />\n        <div className=\"feed-posts\">\n          {posts.map((post) => (\n            // eslint-disable-next-line no-underscore-dangle\n            <div className=\"feed-post\" key={post._id}>\n              <h3>{post.user.username}</h3>\n              <p className=\"feed-post-text\">{post.text}</p>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nFeed.propTypes = {\n  fetchPosts: PropTypes.func.isRequired,\n  posts: PropTypes.instanceOf(Array).isRequired,\n  newPost: PropTypes.instanceOf(Object),\n};\n\nFeed.defaultProps = {\n  newPost: undefined,\n};\n\nexport default withRouter(Feed);\n","import { connect } from 'react-redux';\nimport { fetchPosts } from '../../actions/post_actions';\nimport Feed from './feed';\n\nconst mapStateToProps = (state) => ({\n  posts: Object.values(state.posts.all),\n  currentUser: state.session.user,\n  newPost: state.posts.new,\n  errors: state.session.errors,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchPosts: () => dispatch(fetchPosts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Feed);\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\nimport { AuthRoute, ProtectedRoute } from '../util/route_util';\nimport NavBarContainer from './nav/navbar_container';\nimport ProfileContainer from './profile/profile_container';\nimport LoginFormContainer from './session/login_form_container';\nimport SignupFormContainer from './session/signup_form_container';\nimport FeedContainer from './feed/feed_container';\nimport './app.css';\n\nconst App = () => (\n  <div className=\"app\">\n    <NavBarContainer />\n    <Switch>\n      <AuthRoute exact path=\"/login\" component={LoginFormContainer} />\n      <AuthRoute exact path=\"/signup\" component={SignupFormContainer} />\n\n      <ProtectedRoute exact path=\"/profile\" component={ProfileContainer} />\n      <ProtectedRoute exact path=\"/feed\" component={FeedContainer} />\n    </Switch>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport App from './app';\n\nconst Root = ({ store }) => (\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>\n);\n\nRoot.propTypes = {\n  store: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default Root;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// eslint-disable-next-line camelcase\nimport jwt_decode from 'jwt-decode';\nimport { setAuthToken } from './util/session_util';\nimport { logout } from './actions/session_actions';\nimport configureStore from './store/store';\nimport Root from './components/root';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  let store;\n\n  if (localStorage.jwtToken) {\n    setAuthToken(localStorage.jwtToken);\n    const decodedUser = jwt_decode(localStorage.jwtToken);\n    const preloadedState = { session: { isAuthenticated: true, user: decodedUser } };\n    store = configureStore(preloadedState);\n    const currentTime = Date.now() / 1000;\n\n    if (decodedUser.exp < currentTime) {\n      store.dispatch(logout());\n      window.location.href = '/login';\n    }\n  } else {\n    store = configureStore({});\n  }\n  const root = document.getElementById('root');\n\n  ReactDOM.render(<Root store={store} />, root);\n});\n"],"sourceRoot":""}